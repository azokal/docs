# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Ambroise Maupate & Julien Blanchet
# This file is distributed under the same license as the Roadiz
# documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Roadiz documentation 0.14.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-07-13 14:49+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../developer/first-steps/vagrant.rst:4
msgid "Using Vagrant for development"
msgstr ""

#: ../../developer/first-steps/vagrant.rst:6
msgid ""
"Roadiz comes with a dedicated ``Vagrantfile`` which is configured to run "
"a *LEMP* stack (Nginx + PHP7.0-FPM + MariaDB), a *phpMyAdmin*, a "
"*Mailcatcher* and an *Apache Solr server*. This will be useful to develop"
" your website on your local computer. Once you’ve cloned Roadiz’ sources "
"just do a ``vagrant up`` in Roadiz’ folder. Then `Vagrant "
"<https://www.vagrantup.com/>`_ will run your code in ``/var/www`` and you"
" will be able to completely use ``bin/roadiz`` commands without bloating "
"your computer with lots of binaries."
msgstr ""

#: ../../developer/first-steps/vagrant.rst:13
msgid "Once vagrant VM has provisioned you will be able to use:"
msgstr ""

#: ../../developer/first-steps/vagrant.rst:15
msgid "``http://localhost:8080/install.php`` to proceed to install."
msgstr ""

#: ../../developer/first-steps/vagrant.rst:16
msgid "``http://localhost:8983/solr`` to use *Apache Solr* admin."
msgstr ""

#: ../../developer/first-steps/vagrant.rst:17
msgid "``http://localhost:8080/phpmyadmin`` for your *MySQL* db admin."
msgstr ""

#: ../../developer/first-steps/vagrant.rst:18
msgid "``http://localhost:1080`` for your *Mailcatcher* tool."
msgstr ""

#: ../../developer/first-steps/vagrant.rst:21
msgid ""
"Be careful, **Windows users**, this ``Vagrantfile`` is configured to use "
"a *NFS* fileshare. Do not hesitate to disable it if you did not setup a "
"*NFS* emulator. For *OS X* and *Linux* user this is built-in your system,"
" so have fun!"
msgstr ""

#: ../../developer/first-steps/vagrant.rst:26
msgid "Provisioners"
msgstr ""

#: ../../developer/first-steps/vagrant.rst:28
msgid ""
"If you don’t need *Apache Solr* or any development tools on your "
"*Vagrant* VM, you can choose the ``roadiz`` provisioner which only set up"
" the *LEMP* stack. So that you can use *Composer* directly on your "
"**host** machine to take benefit of *Composer* cache if you have lots of "
"Roadiz instances."
msgstr ""

#: ../../developer/first-steps/vagrant.rst:52
msgid "When you use default `vagrant up` command, it’s the same as using:"
msgstr ""

#: ../../developer/first-steps/vagrant.rst:61
msgid ""
"Pay attention that *mailcatcher* and *solr* provision scripts may take "
"several minutes to run as they have to download many dependencies and "
"compile sources for their installation."
msgstr ""

#: ../../developer/first-steps/vagrant.rst:64
msgid ""
"If you already provisioned your Vagrant and you just want to add "
"*mailcatcher* for example, you can type ``vagrant provision --provision-"
"with mailcatcher``. No data will be lost in your Vagrant box unless you "
"``destroy`` it."
msgstr ""

#: ../../developer/first-steps/vagrant.rst:69
msgid "Developing with PHP 7"
msgstr ""

#: ../../developer/first-steps/vagrant.rst:71
msgid ""
"Roadiz Vagrant uses **PHP7** with its latest version published on "
"*ppa:ondrej/php* repository. If you do not want to use it and you prefer "
"using PHP 5.6, you can comment out provisioner scripts in "
"``Vagrantfile``. This changes can’t be done once you’ve provisioned your "
"Vagrant VM. This is applicable only for ``roadiz`` and ``mailcatcher`` "
"scripts, others can be provisioned with both PHP versions."
msgstr ""

